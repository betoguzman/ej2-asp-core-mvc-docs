@{
    List<object> toolbarItems = new List<object>();
    toolbarItems.Add(new { text = "Expand All", tooltipText = "Expand All", prefixIcon = "e-expand", id = "expandall", align = "Left" });
    toolbarItems.Add(new { text = "Collapse All", tooltipText = "Collapse All", prefixIcon = "e-collapse", id = "collapseall", align = "Right" });
    toolbarItems.Add(new { text = "Search", align = "Center" });
}

@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).ToolbarClick("toolbarClick").Columns(col =>
{
   col.Field("EmployeeID").HeaderText("Employee ID").IsPrimaryKey(true).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width("120").Add();
   col.Field("FirstName").HeaderText("FirstName").Width("140").Add();
   col.Field("Country").HeaderText("Country").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width("120").Add();
   col.Field("PostalCode").HeaderText("PostalCode").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width("140").Add();
   

}).AllowGrouping(true).GroupSettings(group => { group.Columns(new string[] { "FirstName" }); }).Toolbar(toolbarItems).Render()

<script>

    function toolbarClick(args) {

        if (args.item.id === 'expandall') {
            this.groupModule.expandAll();
        }
        if (args.item.id === "collapseall") {
            this.groupModule.collapseAll();
        }

    }

</script>
<style>
    .e-btn-icon.e-expand.e-icons.e-icon-left::before {
        content: '\e82e';
    }

    .e-collapse::before {
        content: '\e834';
    }
</style>
