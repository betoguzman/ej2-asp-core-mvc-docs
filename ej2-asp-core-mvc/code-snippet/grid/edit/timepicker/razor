@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.Datasource).Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).ValidationRules(new { required = "true" }).Add();
    col.Field("CustomerID").HeaderText("Customer Name").Width("150").Add();
    col.Field("Freight").HeaderText("Freight").Width("120").Format("C2").EditType("numericedit").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("OrderDate").HeaderText("Ship Name").Format("hh:mm").Edit(new { create = "create", read = "read", destroy = "destroy", write = "write" }).Width("150").Add();

}).AllowPaging().EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()

<script>
    var timeObject;
    var element
    function create(args) {
        element = document.createElement('input');
        return element;
    }
    function read(e) {
        return timeObject.value;
    }
    function destroy() {
        timeObject.destroy();
    }
    function write(args) {

        timeObject = new ej.calendars.TimePicker({
            value: args.rowData[args.column.field],
            step: 60
        });
        timeObject.appendTo(element);
    }
</script>