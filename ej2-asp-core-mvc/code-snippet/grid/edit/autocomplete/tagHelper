<ejs-grid id="Grid" dataSource="@ViewBag.DataSource" allowPaging="true" toolbar="@( new List<object>() {"Add","Edit","Delete","Update","Cancel"})">
    <e-grid-editsettings allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editsettings>
    <e-grid-pageSettings pageSize="15"></e-grid-pageSettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" type="number" headerText="Order ID" type="number" isPrimaryKey="true" validationRules="@(new { required= true })" textAlign="Right" width="120"></e-grid-column>
        <e-grid-column field="CustomerID"  type="string" headerText="Customer Name" type="string" width="150" edit="@(new {create = "create", read = "read", destroy = "destroy", write = "write"})"></e-grid-column>
        <e-grid-column field="Freight" type="number" headerText="Freight" editType="numericedit" textAlign="Right" format="C2" width="120"></e-grid-column>
        <e-grid-column field="OrderDate" headerText="Order Date" type="date" format="yMd" editType="datepickeredit"  width="150"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    var autoCompleteData = [
        { CustomerID: 'ALFKI', Id: '1' },
        { CustomerID: 'ANATR', Id: '2' },
        { CustomerID: 'ANTON', Id: '3' },
        { CustomerID: 'BLONP', Id: '4' },
        { CustomerID: 'BOLID', Id: '5' }
    ];
    var autoCompleteEle;
    var element
    function create(args) {
        element = document.createElement('input');
        return element;
    }
    function read(e) {
        return autoCompleteEle.value;
    }
    function destroy() {
        autoCompleteEle.destroy();
    }
    function write(args) {
        autoCompleteEle = new ej.dropdowns.AutoComplete({
            allowCustom: true,
            value: args.rowData[args.column.field],
            dataSource: autoCompleteData,
            fields: { value: 'CustomerID', text: 'CustomerID' }
        });
        autoCompleteEle.appendTo(element);
    }
</script>